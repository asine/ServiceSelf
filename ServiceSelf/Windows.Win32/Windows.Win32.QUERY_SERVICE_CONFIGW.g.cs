// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#pragma warning disable CS1591,CS1573,CS0465,CS0649,CS8019,CS1570,CS1584,CS1658,CS0436,CS8981
using global::System;
using global::System.Diagnostics;
using global::System.Diagnostics.CodeAnalysis;
using global::System.Runtime.CompilerServices;
using global::System.Runtime.InteropServices;
using global::System.Runtime.Versioning;
using winmdroot = global::Windows.Win32;
namespace Windows.Win32
{
	namespace System.Services
	{
		/// <summary>Contains configuration information for an installed service. It is used by the QueryServiceConfig function. (Unicode)</summary>
		/// <remarks>
		/// <para>The configuration information for a service is initially specified when the service is created by a call to the <a href="https://docs.microsoft.com/windows/desktop/api/winsvc/nf-winsvc-createservicea">CreateService</a> function. The information can be modified by calling the <a href="https://docs.microsoft.com/windows/desktop/api/winsvc/nf-winsvc-changeserviceconfiga">ChangeServiceConfig</a> function.</para>
		/// <para><see href="https://learn.microsoft.com/windows/win32/api/winsvc/ns-winsvc-query_service_configw#">Read more on docs.microsoft.com</see>.</para>
		/// </remarks>
		[global::System.CodeDom.Compiler.GeneratedCode("Microsoft.Windows.CsWin32", "0.3.106+a37a0b4b70")]
		internal partial struct QUERY_SERVICE_CONFIGW
		{
			/// <summary></summary>
			internal winmdroot.System.Services.ENUM_SERVICE_TYPE dwServiceType;

			/// <summary></summary>
			internal winmdroot.System.Services.SERVICE_START_TYPE dwStartType;

			/// <summary></summary>
			internal winmdroot.System.Services.SERVICE_ERROR dwErrorControl;

			/// <summary>
			/// <para>The fully qualified path to the service binary file.</para>
			/// <para>The path can also include arguments for an auto-start service. These arguments are passed to the service entry point (typically the <b>main</b> function).</para>
			/// <para><see href="https://learn.microsoft.com/windows/win32/api/winsvc/ns-winsvc-query_service_configw#members">Read more on docs.microsoft.com</see>.</para>
			/// </summary>
			internal winmdroot.Foundation.PWSTR lpBinaryPathName;

			/// <summary>
			/// <para>The name of the load ordering group to which this service belongs. If the member is NULL or an empty string, the service does not belong to a load ordering group.</para>
			/// <para>The startup program uses load ordering groups to load groups of services in a specified order with respect to the other groups. The list of load ordering groups is contained in the following registry value:</para>
			/// <para><b>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\ServiceGroupOrder</b></para>
			/// <para><see href="https://learn.microsoft.com/windows/win32/api/winsvc/ns-winsvc-query_service_configw#members">Read more on docs.microsoft.com</see>.</para>
			/// </summary>
			internal winmdroot.Foundation.PWSTR lpLoadOrderGroup;

			/// <summary>
			/// <para>A unique tag value for this service in the group specified by the <i>lpLoadOrderGroup</i> parameter. A value of zero indicates that the service has not been assigned a tag. You can use a tag for ordering service startup within a load order group by specifying a tag order vector in the registry located at:</para>
			/// <para><b>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\GroupOrderList</b></para>
			/// <para>Tags are only evaluated for <b>SERVICE_KERNEL_DRIVER</b> and <b>SERVICE_FILE_SYSTEM_DRIVER</b> type services that have <b>SERVICE_BOOT_START</b> or <b>SERVICE_SYSTEM_START</b> start types.</para>
			/// <para><see href="https://learn.microsoft.com/windows/win32/api/winsvc/ns-winsvc-query_service_configw#members">Read more on docs.microsoft.com</see>.</para>
			/// </summary>
			internal uint dwTagId;

			/// <summary>A pointer to an array of null-separated names of services or load ordering groups that must start before this service. The array is doubly null-terminated. If the pointer is <b>NULL</b> or if it points to an empty string, the service has no dependencies. If a group name is specified, it must be prefixed by the <b>SC_GROUP_IDENTIFIER</b> (defined in WinSvc.h) character to differentiate it from a service name, because services and service groups share the same name space. Dependency on a service means that this service can only run if the service it depends on is running. Dependency on a group means that this service can run if at least one member of the group is running after an attempt to start all members of the group.</summary>
			internal winmdroot.Foundation.PWSTR lpDependencies;

			/// <summary>
			/// <para>If the service type is <b>SERVICE_WIN32_OWN_PROCESS</b> or <b>SERVICE_WIN32_SHARE_PROCESS</b>, this member is the name of the account that the service process will be logged on as when it runs. This name can be of the form <i>Domain</i><b>\\</b><i>UserName</i>. If the account belongs to the built-in domain, the name can be of the form <b>.\\</b><i>UserName</i>. The name can also be "LocalSystem" if the process is running under the LocalSystem account.</para>
			/// <para>If the service type is <b>SERVICE_KERNEL_DRIVER</b> or <b>SERVICE_FILE_SYSTEM_DRIVER</b>, this member is the driver object name (that is, \FileSystem\Rdr or \Driver\Xns) which the input and output (I/O) system uses to load the device driver. If this member is NULL, the driver is to be run with a default object name created by the I/O system, based on the service name.</para>
			/// <para><see href="https://learn.microsoft.com/windows/win32/api/winsvc/ns-winsvc-query_service_configw#members">Read more on docs.microsoft.com</see>.</para>
			/// </summary>
			internal winmdroot.Foundation.PWSTR lpServiceStartName;

			/// <summary>
			/// <para>The display name to be used by service control programs to identify the service. This string has a maximum length of 256 characters. The name is case-preserved in the service control manager. Display name comparisons are always case-insensitive. This parameter can specify a localized string using the following format: @[<i>Path</i>\]<i>DLLName</i>,-<i>StrID</i> The string with identifier <i>StrID</i> is loaded from <i>DLLName</i>; the <i>Path</i> is optional. For more information, see <a href="https://docs.microsoft.com/windows/desktop/api/winreg/nf-winreg-regloadmuistringa">RegLoadMUIString</a>. <b>Windows Server 2003 and Windows XP:  </b>Localized strings are not supported until Windows Vista.</para>
			/// <para><see href="https://learn.microsoft.com/windows/win32/api/winsvc/ns-winsvc-query_service_configw#members">Read more on docs.microsoft.com</see>.</para>
			/// </summary>
			internal winmdroot.Foundation.PWSTR lpDisplayName;
		}
	}
}
