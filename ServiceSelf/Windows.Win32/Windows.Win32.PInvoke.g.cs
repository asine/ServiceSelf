// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#pragma warning disable CS1591,CS1573,CS0465,CS0649,CS8019,CS1570,CS1584,CS1658,CS0436,CS8981
using global::System;
using global::System.Diagnostics;
using global::System.Diagnostics.CodeAnalysis;
using global::System.Runtime.CompilerServices;
using global::System.Runtime.InteropServices;
using global::System.Runtime.Versioning;
using winmdroot = global::Windows.Win32;
namespace Windows.Win32
{
	internal static partial class PInvoke
	{
		/// <summary>
		/// <para>Notifies a service that it should stop.</para>
		/// <para>If a service accepts this control code, it must stop upon receipt and return <b>NO_ERROR</b>. After the SCM sends this control code, it will not send other control codes to the service. <b>Windows XP:  </b>If the service returns <b>NO_ERROR</b> and continues to run, it continues to receive control codes. This behavior changed starting with Windows Server 2003 and Windows XP with SP2.</para>
		/// <para><see href="https://learn.microsoft.com/windows/win32/api/winsvc/nc-winsvc-lphandler_function_ex#">Read more on docs.microsoft.com</see>.</para>
		/// </summary>
		/// <remarks>
		/// <para><see href="https://learn.microsoft.com/windows/win32/api/winsvc/nc-winsvc-lphandler_function_ex">Learn more about this API from docs.microsoft.com</see>.</para>
		/// </remarks>
		internal const uint SERVICE_CONTROL_STOP = 1U;
	}
}
